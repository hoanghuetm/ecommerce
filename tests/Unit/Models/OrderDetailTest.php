<?php

namespace Tests\Unit\Models;

use App\Models\OrderDetail;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class OrderDetailTest extends TestCase
{
    /**
     * A basic unit test example.
     *
     * @return void
     */
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_contains_valid_fillable_properties()
    {
        $order_detail = new OrderDetail();
        $this->assertEquals([
            'quantity',
            'price',
            'product_id',
            'order_id',
        ], $order_detail->getFillable());
    }

    public function test_order_relation()
    {
        $order_detail = new OrderDetail();
        $relation = $order_detail->order();
        $this->assertInstanceOf(BelongsTo::class, $relation);
        $this->assertEquals('order_id', $relation->getForeignKeyName());
        $this->assertEquals('id', $relation->getOwnerKeyName());
    }

    public function test_product_relation()
    {
        $order_detail = new OrderDetail();
        $relation = $order_detail->product();
        $this->assertInstanceOf(BelongsTo::class, $relation);
        $this->assertEquals('product_id', $relation->getForeignKeyName());
        $this->assertEquals('id', $relation->getOwnerKeyName());
    }

    public function test_table_name()
    {
        $order_detail = new OrderDetail();
        $this->assertEquals('order_details', $order_detail->getTable());
    }
}
